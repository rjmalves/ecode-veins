//
// Generated file, do not edit! Created by nedtool 5.7 from veins/modules/messages/TMRMessage.msg.
//

#ifndef __VEINS_TMRMESSAGE_M_H
#define __VEINS_TMRMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0507
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef VEINS_API
#  if defined(VEINS_EXPORT)
#    define VEINS_API  OPP_DLLEXPORT
#  elif defined(VEINS_IMPORT)
#    define VEINS_API  OPP_DLLIMPORT
#  else
#    define VEINS_API
#  endif
#endif

// cplusplus {{
#include "veins/modules/messages/BaseFrame1609_4_m.h"
#include "veins/base/utils/SimpleAddress.h"
// }}


namespace veins {

/**
 * Class generated from <tt>veins/modules/messages/TMRMessage.msg:12</tt> by nedtool.
 * <pre>
 * packet TMRMessage extends BaseFrame1609_4
 * {
 *     int senderID;
 *     string senderEdge;
 *     double edgeAverageSpeed;
 *     double edgeDensity;
 *     double edgeTravelTime;
 *     simtime_t time;
 * }
 * </pre>
 */
class VEINS_API TMRMessage : public ::veins::BaseFrame1609_4
{
  protected:
    int senderID;
    ::omnetpp::opp_string senderEdge;
    double edgeAverageSpeed;
    double edgeDensity;
    double edgeTravelTime;
    ::omnetpp::simtime_t time;

  private:
    void copy(const TMRMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TMRMessage&);

  public:
    TMRMessage(const char *name=nullptr, short kind=0);
    TMRMessage(const TMRMessage& other);
    virtual ~TMRMessage();
    TMRMessage& operator=(const TMRMessage& other);
    virtual TMRMessage *dup() const override {return new TMRMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSenderID() const;
    virtual void setSenderID(int senderID);
    virtual const char * getSenderEdge() const;
    virtual void setSenderEdge(const char * senderEdge);
    virtual double getEdgeAverageSpeed() const;
    virtual void setEdgeAverageSpeed(double edgeAverageSpeed);
    virtual double getEdgeDensity() const;
    virtual void setEdgeDensity(double edgeDensity);
    virtual double getEdgeTravelTime() const;
    virtual void setEdgeTravelTime(double edgeTravelTime);
    virtual ::omnetpp::simtime_t getTime() const;
    virtual void setTime(::omnetpp::simtime_t time);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TMRMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TMRMessage& obj) {obj.parsimUnpack(b);}

} // namespace veins

#endif // ifndef __VEINS_TMRMESSAGE_M_H

